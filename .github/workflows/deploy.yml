name: Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Build and push Docker image
      run: |
        IMAGE="asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.REPO_NAME }}/app:${{ github.sha }}"
        docker build -t "$IMAGE" -f Dockerfile.safe .
        docker push "$IMAGE"
      env:
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ secrets.SERVICE_NAME }} \
          --image "asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.REPO_NAME }}/app:${{ github.sha }}" \
          --region ${{ secrets.GCP_REGION }} \
          --platform managed \
          --allow-unauthenticated



          SERVICE_URL=$(gcloud run services describe python-webapp \
            --region=asia-east1 \
            --format='value(status.url)')
          echo "service_url=$SERVICE_URL" >> $GITHUB_OUTPUT
          echo "🌍 Cloud Run Service URL: $SERVICE_URL"

      - name: 🩺 Health Check
        run: |
          echo "🔎 Checking if service is responding..."
          HEALTH_URL="${{ steps.deploy.outputs.service_url }}"
          for i in {1..10}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH_URL")
            if [ "$STATUS" -eq 200 ]; then
              echo "✅ Health check passed! (HTTP $STATUS)"
              exit 0
            else
              echo "⏳ Attempt $i: Service not ready yet (HTTP $STATUS)"
              sleep 10
            fi
          done
          echo "❌ Service failed health check after 10 attempts."
          exit 1

      - name: 🌐 Display Deployed URL
        run: echo "✅ Cloud Run deployed successfully at ${{ steps.deploy.outputs.service_url }}"



